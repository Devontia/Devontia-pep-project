package DAO;

import Util.ConnectionUtil;
import Model.Account;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;


public class AccountDAO {


    /**
     * TODO: retrieve all authors from the Author table.
     * You only need to change the sql String.
     * @return all Authors.
     */
    public List<Account> getAllAccounts(){


        Connection connection = ConnectionUtil.getConnection();
        List<Account> account = new ArrayList<>();
        try {
            //Write SQL logic here
            String sql = "select * from Account";
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            ResultSet rs = preparedStatement.executeQuery();
            while(rs.next()){
                Account user = new Account (rs.getString("username"),rs.getString("password"));
                account.add(user);
            }
        }catch(SQLException e){
            System.out.println(e.getMessage());
        }
        return account;
    }

    /**
     * TODO: insert an author into the Author table.
     * The author_id should be automatically generated by the sql database if it is not provided because it was
     * set to auto_increment. Therefore, you only need to insert a record with a single column (name).
     * You only need to change the sql String and leverage PreparedStatements' setString methods.
     */
    public Account insertAllAccounts(Account account){
        Connection connection = ConnectionUtil.getConnection();
        try {

//          Write SQL logic here. You should only be inserting with the name column, so that the database may
//          automatically generate a primary key.
            String sql = "insert into Account  (username, password) values (?,?);" ;
            PreparedStatement preparedStatement = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);

            //write preparedStatement's setString method here.
            preparedStatement.setString(1,account.getUsername());
            preparedStatement.setString(2,account.getPassword());
            

            
            preparedStatement.executeUpdate();
            ResultSet pkeyResultSet = preparedStatement.getGeneratedKeys();
            if(account.getPassword().length() >= 4 && account.getUsername() != "" ){
            if(pkeyResultSet.next()){
                int generated_account_id = (int) pkeyResultSet.getLong(1);
                return new Account(generated_account_id, account.getUsername(),account.getPassword());
            }
        }

        }catch(SQLException e){
            System.out.println(e.getMessage());
        }

        return null;
    }
     /**
     * TODO: retrieve all authors from the Author table.
     * You only need to change the sql String.
     * @return all Authors.
     */
    public Account verilogin(String userName, String password){

        Connection connection = ConnectionUtil.getConnection();
        try {
            //Write SQL logic here
            String sql = "select * from Account where username = ? AND password = ? ";
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setString(1,userName);
            preparedStatement.setString(2,password);
            ResultSet rs = preparedStatement.executeQuery();

            
            if(rs.next()){
                int generated_account_id =  rs.getInt("account_id");
                return new Account(generated_account_id, userName,password);
            }

        }catch(SQLException e){
            System.out.println(e.getMessage());
        }
        return null;
    }
}
